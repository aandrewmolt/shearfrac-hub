import React from 'react';
import { WifiOff, Wifi } from 'lucide-react';
import { JobDiagram } from '@/hooks/useJobs';
import { useUnifiedInventory } from '@/hooks/useUnifiedInventory';
import { Badge } from '@/components/ui/badge';
import JobCard from './JobCard';
import EmptyJobsState from './EmptyJobsState';

interface JobsListProps {
  jobs: JobDiagram[];
  isLoading: boolean;
  onSelectJob: (job: JobDiagram) => void;
  onDeleteJob: (job: JobDiagram) => void;
  onCompleteJob?: (job: JobDiagram, endDate: string) => void;
  onUpdateJobName?: (jobId: string, newName: string) => void;
}

const JobsList: React.FC<JobsListProps> = ({ jobs, isLoading, onSelectJob, onDeleteJob, onCompleteJob, onUpdateJobName }) => {
  const { data, getDeployedEquipment } = useUnifiedInventory();
  const isOnline = navigator.onLine;

  const getDeployedEquipmentForJob = (jobId: string) => {
    return getDeployedEquipment(jobId).map(item => ({
      id: item.id,
      typeId: item.equipmentTypeId,
      quantity: 1,
      typeName: data.equipmentTypes.find(type => type.id === item.equipmentTypeId)?.name || 'Unknown',
    }));
  };

  if (isLoading) {
    return (
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {[1, 2, 3].map(i => (
          <div key={i} className="bg-white rounded-lg shadow-sm border p-6 animate-pulse">
            <div className="h-6 bg-gray-200 rounded mb-4"></div>
            <div className="h-4 bg-gray-200 rounded mb-2"></div>
            <div className="h-4 bg-gray-200 rounded mb-4"></div>
          </div>
        ))}
      </div>
    );
  }

  if (jobs.length === 0) {
    return <EmptyJobsState />;
  }

  return (
    <div className="space-y-4">
      {/* Connection Status */}
      <div className="flex items-center justify-between bg-white rounded-lg p-4 border">
        <div className="flex items-center gap-2">
          {isOnline ? (
            <>
              <Wifi className="h-5 w-5 text-green-500" />
              <span className="text-sm font-medium text-green-600">Connected to Turso</span>
            </>
          ) : (
            <>
              <WifiOff className="h-5 w-5 text-red-500" />
              <span className="text-sm font-medium text-red-600">No Internet Connection</span>
            </>
          )}
        </div>
      </div>

      {/* Jobs Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {jobs.map((job) => (
          <JobCard
            key={job.id}
            job={job}
            onSelectJob={() => onSelectJob(job)}
            onDeleteJob={() => onDeleteJob(job)}
            onCompleteJob={onCompleteJob}
            onUpdateJobName={onUpdateJobName}
            deployedEquipment={getDeployedEquipmentForJob(job.id)}
          />
        ))}
      </div>
    </div>
  );
};

export default JobsList;